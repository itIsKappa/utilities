#! /bin/bash

#########################################################

# EUDO: Ersatz User Do.
# A wrapper for substitute user.
# Directory completions are not available inside
# quoted string in shells. This program is to provide
# a one-time root access without sudo. This does away
# with the quotes and other shenanigans involved when
# using su -c.

#########################################################

# Help.
function display_help {
  ANSI_BLUE='\x1b[34m'
  ANSI_CYAN='\x1b[36m'
  ANSI_RESET='\x1b[39m'
  echo -e "\
$ANSI_BLUE######  #    #  #####    #### $ANSI_RESET 
$ANSI_CYAN#       #    #  #    #  #    #$ANSI_RESET
$ANSI_BLUE######  #    #  #    #  #    #$ANSI_RESET
$ANSI_CYAN#       #    #  #    #  #    #$ANSI_RESET
$ANSI_BLUE######   ####   #####    #### $ANSI_RESET"
  echo 'Erstaz User Do.'
  echo "Usage: $0 [-u <username> | --user <username>] <command/string>"
  echo "       $0 [-h | --help]"
  exit
}

# Pre-emptive checking.
if [ $# -lt 1 ]; then display_help
fi

# Parsing and passing the command.
user=''
cmd=''
options=1

while [ $options -eq 1 ]; do
  if [ $1 = '-u' ] || [ $1 = '--user' ]; then
    user=$2
    shift; shift
    options=0
  elif [ $1 = '-h' ] || [ $1 = '--help' ]; then
    display_help
  else options=0
  fi
done

while [ $# -gt 0 ]; do
  cmd="$cmd$1 "
  shift
done

su $user -c "$cmd"
